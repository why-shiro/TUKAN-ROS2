// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/AirspeedValidated.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    module AirspeedValidated_Constants {
      const uint32 MESSAGE_VERSION = 1;
      const int8 DISABLED = -1;
      const int8 GROUND_MINUS_WIND = 0;
      const int8 SENSOR_1 = 1;
      const int8 SENSOR_2 = 2;
      const int8 SENSOR_3 = 3;
      const int8 SYNTHETIC = 4;
    };
    struct AirspeedValidated {
      @verbatim (language="comment", text=
        "time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        "Indicated airspeed (IAS), set to NAN if invalid")
      @unit (value="m/s")
      float indicated_airspeed_m_s;

      @verbatim (language="comment", text=
        "Calibrated airspeed (CAS), set to NAN if invalid")
      @unit (value="m/s")
      float calibrated_airspeed_m_s;

      @verbatim (language="comment", text=
        "True airspeed (TAS), set to NAN if invalid")
      @unit (value="m/s")
      float true_airspeed_m_s;

      @verbatim (language="comment", text=
        "Source of currently published airspeed values")
      int8 airspeed_source;

      @verbatim (language="comment", text=
        "debug states" "\n"
        "CAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid")
      float calibrated_ground_minus_wind_m_s;

      @verbatim (language="comment", text=
        "synthetic airspeed in m/s, set to NAN if invalid")
      float calibraded_airspeed_synth_m_s;

      @verbatim (language="comment", text=
        "filtered indicated airspeed derivative")
      @unit (value="m/s/s")
      float airspeed_derivative_filtered;

      @verbatim (language="comment", text=
        "filtered fixed-wing throttle")
      @unit (value="-")
      float throttle_filtered;

      @verbatim (language="comment", text=
        "filtered pitch")
      @unit (value="rad")
      float pitch_filtered;
    };
  };
};
